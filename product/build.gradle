plugins {
    id "org.sonarqube" version "4.4.0.3356"
    id 'jacoco'
}

dependencies {
    implementation 'org.redisson:redisson-spring-boot-starter:3.27.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework:spring-tx'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
}

sonar {
    properties {
        property 'sonar.host.url', 'http://150.230.252.178:9000'
        property "sonar.token", "squ_a6bae554fae971d2154448dbabde5c4f69e0ed51"
        property "sonar.projectKey", "project:product"
        property 'sonar.projectName', 'product'
        property 'sonar.java.source', 17
        property 'encoding', 'UTF-8'
        property 'charSet', 'UTF-8'
        property 'sonar.exclusions', '**/dto/**,**/ex/**,**/request/**,**/response/**,**/config/**,**/event/**,**/*Exception.java, ' +
                '**/*Dto.java, **/*Dtos.java, **/*Form.java, **/*Request.java,  **/*Requests.java, **/*Response.java, **/*Responses.java, **/*Event.java, **/*Application.java'
    }
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.required = false
    }
}